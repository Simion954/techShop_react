{"ast":null,"code":"// import { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n// import {\n//   productListReducer,\n//   productDetailsReducer,\n// } from './reducers/productReducers'\n// import { cartReducer } from './reducers/cartReducers'\n// import {\n//   userLoginReducer,\n//   userRegisterReducer,\n//   userDetailsReducer,\n//   userUpdateProfileReducer,\n//   userListReducer,\n//   userDeleteReducer,\n// } from './reducers/userReducers'\n// import {\n//   orderCreateReducer,\n//   orderDetailsReducer,\n//   orderPayReducer,\n//   orderListMyReducer,\n// } from './reducers/orderReducers'\n// const reducer = combineReducers({\n//   productList: productListReducer,\n//   productDetails: productDetailsReducer,\n//   cart: cartReducer,\n//   userLogin: userLoginReducer,\n//   userRegister: userRegisterReducer,\n//   userDetails: userDetailsReducer,\n//   userUpdateProfile: userUpdateProfileReducer,\n//   userList: userListReducer,\n//   userDelete: userDeleteReducer,\n//   orderCreate: orderCreateReducer,\n//   orderDetails: orderDetailsReducer,\n//   orderPay: orderPayReducer,\n//   orderListMy: orderListMyReducer,\n// })\n// const cartItemsFromStorage = localStorage.getItem('cartItems')\n//   ? JSON.parse(localStorage.getItem('cartItems'))\n//   : []\n// const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n// const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n//   ? JSON.parse(localStorage.getItem('shippingAddress'))\n//   : {}\n// const initialState = {\n//   cart: {\n//     cartItems: cartItemsFromStorage,\n//     shippingAddress: shippingAddressFromStorage,\n//   },\n//   userLogin: { userInfo: userInfoFromStorage },\n// }\n// const middleware = [thunk]\n// const store = createStore(\n//   reducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// )\n// export default store\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/catriniciantonina/Desktop/CodingDojo/MERN/ShopVille/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productDelete","productCreate","productCreateReducer","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderDeliverReducer","orderListMy","orderList","orderListReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,0BALF,EAMEC,sBANF,QAOO,4BAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;AAC9BuB,EAAAA,WAAW,EAAEnB,kBADiB;AAE9BoB,EAAAA,cAAc,EAAEnB,qBAFc;AAG9BoB,EAAAA,aAAa,EAAEnB,oBAHe;AAI9BoB,EAAAA,aAAa,EAAEC,oBAJe;AAK9BC,EAAAA,aAAa,EAAErB,oBALe;AAM9BsB,EAAAA,mBAAmB,EAAErB,0BANS;AAO9BsB,EAAAA,eAAe,EAAErB,sBAPa;AAQ9BsB,EAAAA,IAAI,EAAErB,WARwB;AAS9BsB,EAAAA,SAAS,EAAErB,gBATmB;AAU9BsB,EAAAA,YAAY,EAAErB,mBAVgB;AAW9BsB,EAAAA,WAAW,EAAErB,kBAXiB;AAY9BsB,EAAAA,iBAAiB,EAAErB,wBAZW;AAa9BsB,EAAAA,QAAQ,EAAErB,eAboB;AAc9BsB,EAAAA,UAAU,EAAErB,iBAdkB;AAe9BsB,EAAAA,UAAU,EAAErB,iBAfkB;AAgB9BsB,EAAAA,WAAW,EAAErB,kBAhBiB;AAiB9BsB,EAAAA,YAAY,EAAErB,mBAjBgB;AAkB9BsB,EAAAA,QAAQ,EAAErB,eAlBoB;AAmB9BsB,EAAAA,YAAY,EAAEC,mBAnBgB;AAoB9BC,EAAAA,WAAW,EAAEvB,kBApBiB;AAqB9BwB,EAAAA,SAAS,EAAEC;AArBmB,CAAD,CAA/B;AAwBA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBvB,EAAAA,IAAI,EAAE;AACJwB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBrB,EAAAA,SAAS,EAAE;AAAEyB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CACvBuB,OADuB,EAEvBgC,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["// import { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk'\n// import { composeWithDevTools } from 'redux-devtools-extension'\n// import {\n//   productListReducer,\n//   productDetailsReducer,\n// } from './reducers/productReducers'\n// import { cartReducer } from './reducers/cartReducers'\n// import {\n//   userLoginReducer,\n//   userRegisterReducer,\n//   userDetailsReducer,\n//   userUpdateProfileReducer,\n//   userListReducer,\n//   userDeleteReducer,\n// } from './reducers/userReducers'\n// import {\n//   orderCreateReducer,\n//   orderDetailsReducer,\n//   orderPayReducer,\n//   orderListMyReducer,\n// } from './reducers/orderReducers'\n\n// const reducer = combineReducers({\n//   productList: productListReducer,\n//   productDetails: productDetailsReducer,\n//   cart: cartReducer,\n//   userLogin: userLoginReducer,\n//   userRegister: userRegisterReducer,\n//   userDetails: userDetailsReducer,\n//   userUpdateProfile: userUpdateProfileReducer,\n//   userList: userListReducer,\n//   userDelete: userDeleteReducer,\n//   orderCreate: orderCreateReducer,\n//   orderDetails: orderDetailsReducer,\n//   orderPay: orderPayReducer,\n//   orderListMy: orderListMyReducer,\n// })\n\n// const cartItemsFromStorage = localStorage.getItem('cartItems')\n//   ? JSON.parse(localStorage.getItem('cartItems'))\n//   : []\n\n// const userInfoFromStorage = localStorage.getItem('userInfo')\n//   ? JSON.parse(localStorage.getItem('userInfo'))\n//   : null\n\n// const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n//   ? JSON.parse(localStorage.getItem('shippingAddress'))\n//   : {}\n\n// const initialState = {\n//   cart: {\n//     cartItems: cartItemsFromStorage,\n//     shippingAddress: shippingAddressFromStorage,\n//   },\n//   userLogin: { userInfo: userInfoFromStorage },\n// }\n\n// const middleware = [thunk]\n\n// const store = createStore(\n//   reducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// )\n\n// export default store\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}