{"ast":null,"code":"var _jsxFileName = \"/Users/catriniciantonina/Desktop/CodingDojo/MERN/ShopVille/frontend/src/screens/PlaceOrderScreen.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\n\nconst PlaceOrderScreen = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart); //Calculate prices\n\n  const addDecimals = num => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 20);\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2);\n  const orderCreate = useSelector(state => state.orderCreate);\n  const {\n    order,\n    success,\n    error\n  } = orderCreate;\n  useEffect(() => {\n    if (success) {\n      history.pushState(`/order/${order._id}`);\n    } //eslint-disable-next-line\n\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(createOrder({\n      orderItems: cart.cartItems,\n      shippingAddress: cart.shippingAddress,\n      paymentMethod: cart.paymentMethod,\n      itemsPrice: cart.itemsPrice,\n      shippingPrice: cart.shippingPrice,\n      taxPrice: cart.taxPrice,\n      totalPrice: cart.totalPrice\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, \"placeorder\"); //   <>\n  //     <CheckoutSteps step1 step2 step3 step4 />\n  //     <Row>\n  //       <Col md={8}>\n  //         <ListGroup variant='flush'>\n  //           <ListGroup.Item>\n  //             <h2>Shipping</h2>\n  //             <p>\n  //               <strong>Address:</strong>\n  //               {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n  //               {cart.shippingAddress.postalCode},{' '}\n  //               {cart.shippingAddress.country}\n  //             </p>\n  //           </ListGroup.Item>\n  //           <ListGroup.Item>\n  //             <h2>Payment Method</h2>\n  //             <strong>Method: </strong>\n  //             {cart.paymentMethod}\n  //           </ListGroup.Item>\n  //           <ListGroup.Item>\n  //             <h2>Order Items</h2>\n  //             {cart.cartItems.length === 0 ? (\n  //               <Message>Your cart is empty</Message>\n  //             ) : (\n  //               <ListGroup variant='flush'>\n  //                 {cart.cartItems.map((item, index) => (\n  //                   <ListGroup.Item key={index}>\n  //                     <Row>\n  //                       <Col md={1}>\n  //                         <Image\n  //                           src={item.image}\n  //                           alt={item.name}\n  //                           fluid\n  //                           rounded\n  //                         />\n  //                       </Col>\n  //                       <Col>\n  //                         <Link to={`/product/${item.product}`}>\n  //                           {item.name}\n  //                         </Link>\n  //                       </Col>\n  //                       <Col md={4}>\n  //                         {item.qty} x ${item.price} = ${item.qty * item.price}\n  //                       </Col>\n  //                     </Row>\n  //                   </ListGroup.Item>\n  //                 ))}\n  //               </ListGroup>\n  //             )}\n  //           </ListGroup.Item>\n  //         </ListGroup>\n  //       </Col>\n  //       <Col md={4}>\n  //         <Card>\n  //           <ListGroup variant='flush'>\n  //             <ListGroup.Item>\n  //               <h2>Order Summary</h2>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Items</Col>\n  //                 <Col>${cart.itemsPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Shipping</Col>\n  //                 <Col>${cart.shippingPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Tax</Col>\n  //                 <Col>${cart.taxPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Total</Col>\n  //                 <Col>${cart.totalPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               {error && <Message variant='danger'>{error}</Message>}\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Button\n  //                 type='button'\n  //                 className='btn-block'\n  //                 disabled={cart.cartItems === 0}\n  //                 onClick={placeOrderHandler}\n  //               >\n  //                 Place Order\n  //               </Button>\n  //             </ListGroup.Item>\n  //           </ListGroup>\n  //         </Card>\n  //       </Col>\n  //     </Row>\n  //   </>\n  // )\n};\n\nexport default PlaceOrderScreen;","map":{"version":3,"sources":["/Users/catriniciantonina/Desktop/CodingDojo/MERN/ShopVille/frontend/src/screens/PlaceOrderScreen.js"],"names":["React","useEffect","Link","Button","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","Message","CheckoutSteps","createOrder","ORDER_CREATE_RESET","USER_DETAILS_RESET","PlaceOrderScreen","history","dispatch","cart","state","addDecimals","num","Math","round","toFixed","itemsPrice","cartItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","Number","totalPrice","orderCreate","order","success","error","pushState","_id","placeOrderHandler","orderItems","shippingAddress","paymentMethod"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  //Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 20)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.pushState(`/order/${order._id}`)\n    }\n    //eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return <div>placeorder</div>\n  //   <>\n  //     <CheckoutSteps step1 step2 step3 step4 />\n  //     <Row>\n  //       <Col md={8}>\n  //         <ListGroup variant='flush'>\n  //           <ListGroup.Item>\n  //             <h2>Shipping</h2>\n  //             <p>\n  //               <strong>Address:</strong>\n  //               {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n  //               {cart.shippingAddress.postalCode},{' '}\n  //               {cart.shippingAddress.country}\n  //             </p>\n  //           </ListGroup.Item>\n\n  //           <ListGroup.Item>\n  //             <h2>Payment Method</h2>\n  //             <strong>Method: </strong>\n  //             {cart.paymentMethod}\n  //           </ListGroup.Item>\n\n  //           <ListGroup.Item>\n  //             <h2>Order Items</h2>\n  //             {cart.cartItems.length === 0 ? (\n  //               <Message>Your cart is empty</Message>\n  //             ) : (\n  //               <ListGroup variant='flush'>\n  //                 {cart.cartItems.map((item, index) => (\n  //                   <ListGroup.Item key={index}>\n  //                     <Row>\n  //                       <Col md={1}>\n  //                         <Image\n  //                           src={item.image}\n  //                           alt={item.name}\n  //                           fluid\n  //                           rounded\n  //                         />\n  //                       </Col>\n  //                       <Col>\n  //                         <Link to={`/product/${item.product}`}>\n  //                           {item.name}\n  //                         </Link>\n  //                       </Col>\n  //                       <Col md={4}>\n  //                         {item.qty} x ${item.price} = ${item.qty * item.price}\n  //                       </Col>\n  //                     </Row>\n  //                   </ListGroup.Item>\n  //                 ))}\n  //               </ListGroup>\n  //             )}\n  //           </ListGroup.Item>\n  //         </ListGroup>\n  //       </Col>\n  //       <Col md={4}>\n  //         <Card>\n  //           <ListGroup variant='flush'>\n  //             <ListGroup.Item>\n  //               <h2>Order Summary</h2>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Items</Col>\n  //                 <Col>${cart.itemsPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Shipping</Col>\n  //                 <Col>${cart.shippingPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Tax</Col>\n  //                 <Col>${cart.taxPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Total</Col>\n  //                 <Col>${cart.totalPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               {error && <Message variant='danger'>{error}</Message>}\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Button\n  //                 type='button'\n  //                 className='btn-block'\n  //                 disabled={cart.cartItems === 0}\n  //                 onClick={placeOrderHandler}\n  //               >\n  //                 Place Order\n  //               </Button>\n  //             </ListGroup.Item>\n  //           </ListGroup>\n  //         </Card>\n  //       </Col>\n  //     </Row>\n  //   </>\n  // )\n}\n\nexport default PlaceOrderScreen\n"]},"metadata":{},"sourceType":"module"}