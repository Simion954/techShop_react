{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/catriniciantonina/Desktop/CodingDojo/MERN/ShopVille/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productDelete","productDeleteReducer","productCreate","productCreateReducer","productUpdate","productUpdateReducer","productReviewCreate","productReviewCreateReducer","productTopRated","productTopRatedReducer","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","userUpdateReducer","orderCreate","orderDetails","orderPay","orderDeliver","orderDeliverReducer","orderListMy","orderList","orderListReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,yBAPP;AAQA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;AAC9BkB,EAAAA,WAAW,EAAEd,kBADiB;AAE9Be,EAAAA,cAAc,EAAEd,qBAFc;AAG9Be,EAAAA,aAAa,EAAEC,oBAHe;AAI9BC,EAAAA,aAAa,EAAEC,oBAJe;AAK9BC,EAAAA,aAAa,EAAEC,oBALe;AAM9BC,EAAAA,mBAAmB,EAAEC,0BANS;AAO9BC,EAAAA,eAAe,EAAEC,sBAPa;AAQ9BC,EAAAA,IAAI,EAAExB,WARwB;AAS9ByB,EAAAA,SAAS,EAAExB,gBATmB;AAU9ByB,EAAAA,YAAY,EAAExB,mBAVgB;AAW9ByB,EAAAA,WAAW,EAAExB,kBAXiB;AAY9ByB,EAAAA,iBAAiB,EAAExB,wBAZW;AAa9ByB,EAAAA,QAAQ,EAAExB,eAboB;AAc9ByB,EAAAA,UAAU,EAAExB,iBAdkB;AAe9ByB,EAAAA,UAAU,EAAEC,iBAfkB;AAgB9BC,EAAAA,WAAW,EAAE1B,kBAhBiB;AAiB9B2B,EAAAA,YAAY,EAAE1B,mBAjBgB;AAkB9B2B,EAAAA,QAAQ,EAAE1B,eAlBoB;AAmB9B2B,EAAAA,YAAY,EAAEC,mBAnBgB;AAoB9BC,EAAAA,WAAW,EAAE5B,kBApBiB;AAqB9B6B,EAAAA,SAAS,EAAEC;AArBmB,CAAD,CAA/B;AAwBA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBxB,EAAAA,IAAI,EAAE;AACJyB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBtB,EAAAA,SAAS,EAAE;AAAE0B,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CACvBkB,OADuB,EAEvBqC,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}